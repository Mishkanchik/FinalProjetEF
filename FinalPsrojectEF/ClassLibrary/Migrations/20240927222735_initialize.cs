using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace ClassLibrary.Migrations
{
    /// <inheritdoc />
    public partial class initialize : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Author",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FullName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    HowManyBooks = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Author", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "CostBook",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PaperExpenses = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    СardboardExpenses = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    BookId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CostBook", x => x.Id);
                    table.UniqueConstraint("AK_CostBook_BookId", x => x.BookId);
                });

            migrationBuilder.CreateTable(
                name: "Genre",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NameGenre = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Genre", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Publishing",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NamePublishing = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Publishing", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "SellingBook",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PriceBook = table.Column<decimal>(type: "decimal(18,2)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SellingBook", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Book",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false),
                    Title = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    NumberOfPages = table.Column<int>(type: "int", nullable: false),
                    YearOfPublication = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsItSequel = table.Column<bool>(type: "bit", nullable: false),
                    AuthorId = table.Column<int>(type: "int", nullable: false),
                    SellingBooksId = table.Column<int>(type: "int", nullable: false),
                    GenresId = table.Column<int>(type: "int", nullable: false),
                    PublishingsId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Book", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Book_Author_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "Author",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Book_CostBook_Id",
                        column: x => x.Id,
                        principalTable: "CostBook",
                        principalColumn: "BookId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Book_Genre_GenresId",
                        column: x => x.GenresId,
                        principalTable: "Genre",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Book_Publishing_PublishingsId",
                        column: x => x.PublishingsId,
                        principalTable: "Publishing",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Book_SellingBook_SellingBooksId",
                        column: x => x.SellingBooksId,
                        principalTable: "SellingBook",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Author",
                columns: new[] { "Id", "FullName", "HowManyBooks" },
                values: new object[,]
                {
                    { 1, "Leann Crossingham", 936 },
                    { 2, "Sheela Ducker", 880 },
                    { 3, "Norman Haskur", 70 },
                    { 4, "Grace Alecock", 811 },
                    { 5, "Salomone Toulmin", 113 },
                    { 6, "Lorrie Escoffrey", 494 },
                    { 7, "Walton Liversage", 345 },
                    { 8, "Marlo Roscam", 978 },
                    { 9, "Orran Gadsden", 353 },
                    { 10, "Fania Maudlen", 208 },
                    { 11, "Kessia Adao", 54 },
                    { 12, "Hayes Plumridege", 309 },
                    { 13, "Constanta McGiffie", 700 },
                    { 14, "Vincent Deaconson", 941 },
                    { 15, "Nollie Brandrick", 545 },
                    { 16, "Freddie Bolf", 126 },
                    { 17, "Jackqueline Gibbett", 649 },
                    { 18, "Eugene LAbbet", 737 },
                    { 19, "Marci McQuaide", 373 },
                    { 20, "Klement Cabell", 400 },
                    { 21, "Jed Karpeev", 51 },
                    { 22, "Maye Daysh", 681 },
                    { 23, "Caren Emmer", 833 },
                    { 24, "Reinhard Fairpo", 375 },
                    { 25, "Husein Aris", 559 },
                    { 26, "Darcee Boal", 401 },
                    { 27, "Ayn Tetther", 956 },
                    { 28, "Revkah Proppers", 691 },
                    { 29, "Xylia Faas", 167 },
                    { 30, "Ora Itzakovitz", 555 },
                    { 31, "Sybilla Heiner", 815 },
                    { 32, "Cori Joisce", 916 },
                    { 33, "Avrit Seger", 89 },
                    { 34, "Elvis Pickrill", 731 },
                    { 35, "Davy Burdon", 501 },
                    { 36, "Giralda Powys", 875 },
                    { 37, "Meriel Grafton", 403 },
                    { 38, "Else Cotterill", 429 },
                    { 39, "Josephine Danniell", 889 },
                    { 40, "Cassondra Lindfors", 852 },
                    { 41, "Lillian Cavell", 379 },
                    { 42, "Kirby Knowlson", 695 },
                    { 43, "Heda Cureton", 791 },
                    { 44, "Flinn Batter", 184 },
                    { 45, "Burg Woodbridge", 845 },
                    { 46, "Norby Pammenter", 176 },
                    { 47, "Cati Spaven", 626 },
                    { 48, "Greer Pilgram", 962 },
                    { 49, "Lavinia Seeley", 441 },
                    { 50, "Dolorita Szapiro", 474 },
                    { 51, "Lawton Leedes", 309 },
                    { 52, "Leanna Klebes", 402 },
                    { 53, "Franchot MacBean", 975 },
                    { 54, "Lissa Heskey", 154 },
                    { 55, "Tressa Tippetts", 167 },
                    { 56, "Rosaleen Bransgrove", 585 },
                    { 57, "Bee Nardrup", 527 },
                    { 58, "Charin Garvie", 105 },
                    { 59, "Julianne Dives", 463 },
                    { 60, "Lombard Kennaway", 386 },
                    { 61, "Spenser Maseyk", 582 },
                    { 62, "Dory O'Heyne", 542 },
                    { 63, "Billy Jencken", 27 },
                    { 64, "Case Lattimore", 960 },
                    { 65, "Arne Gurry", 71 },
                    { 66, "Rustie Standbridge", 457 },
                    { 67, "Karee Pollington", 41 },
                    { 68, "Rebbecca Peplaw", 603 },
                    { 69, "Dion Roubottom", 414 },
                    { 70, "Rollo McKilroe", 268 },
                    { 71, "Newton Blackadder", 228 },
                    { 72, "Drucy Farnsworth", 617 },
                    { 73, "Oswell Addicott", 608 },
                    { 74, "Veriee Alvar", 611 },
                    { 75, "Rosabelle Firk", 40 },
                    { 76, "Emmey Ings", 682 },
                    { 77, "Miguel MacIllrick", 635 },
                    { 78, "Dorisa McGinley", 421 },
                    { 79, "Janka Gadaud", 621 },
                    { 80, "Rafa Smuth", 290 },
                    { 81, "Jannel Scole", 725 },
                    { 82, "Janice Kirkham", 281 },
                    { 83, "Boris Lethbridge", 922 },
                    { 84, "Glynis Buchan", 276 },
                    { 85, "Lancelot Smallman", 123 },
                    { 86, "Osmond Houselee", 450 },
                    { 87, "Pace Mattei", 261 },
                    { 88, "Elsy Gravell", 630 },
                    { 89, "Irena Suggitt", 963 },
                    { 90, "Rowan Cadman", 297 },
                    { 91, "Jake Teager", 543 },
                    { 92, "Imojean Twinn", 662 },
                    { 93, "Rowe Scone", 30 },
                    { 94, "Genna Bredbury", 646 },
                    { 95, "Emili Surguine", 448 },
                    { 96, "Erminie Rosenblum", 942 },
                    { 97, "Elena Salmond", 398 },
                    { 98, "Jeff Paulo", 797 },
                    { 99, "Isadore Klimkiewich", 826 },
                    { 100, "Shandie While", 476 }
                });

            migrationBuilder.InsertData(
                table: "CostBook",
                columns: new[] { "Id", "BookId", "PaperExpenses", "СardboardExpenses" },
                values: new object[,]
                {
                    { 1, 1, 417.76m, 0m },
                    { 2, 2, 3.54m, 0m },
                    { 3, 3, 628.08m, 0m },
                    { 4, 4, 145.2m, 0m },
                    { 5, 5, 833.18m, 0m },
                    { 6, 6, 654.43m, 0m },
                    { 7, 7, 413.15m, 0m },
                    { 8, 8, 550.8m, 0m },
                    { 9, 9, 945.06m, 0m },
                    { 10, 10, 472.05m, 0m },
                    { 11, 11, 293.7m, 0m },
                    { 12, 12, 949.39m, 0m },
                    { 13, 13, 790.95m, 0m },
                    { 14, 14, 737.47m, 0m },
                    { 15, 15, 720.14m, 0m },
                    { 16, 16, 465.2m, 0m },
                    { 17, 17, 150.04m, 0m },
                    { 18, 18, 516.66m, 0m },
                    { 19, 19, 605.04m, 0m },
                    { 20, 20, 803.23m, 0m },
                    { 21, 21, 50.14m, 0m },
                    { 22, 22, 570.84m, 0m },
                    { 23, 23, 913.92m, 0m },
                    { 24, 24, 77.91m, 0m },
                    { 25, 25, 362.67m, 0m },
                    { 26, 26, 91.77m, 0m },
                    { 27, 27, 713.68m, 0m },
                    { 28, 28, 279.67m, 0m },
                    { 29, 29, 730.63m, 0m },
                    { 30, 30, 376.49m, 0m },
                    { 31, 31, 119.37m, 0m },
                    { 32, 32, 82.23m, 0m },
                    { 33, 33, 200.11m, 0m },
                    { 34, 34, 86.55m, 0m },
                    { 35, 35, 478.24m, 0m },
                    { 36, 36, 438.99m, 0m },
                    { 37, 37, 599.52m, 0m },
                    { 38, 38, 533.1m, 0m },
                    { 39, 39, 335.35m, 0m },
                    { 40, 40, 20.85m, 0m },
                    { 41, 41, 151.25m, 0m },
                    { 42, 42, 495.73m, 0m },
                    { 43, 43, 183.36m, 0m },
                    { 44, 44, 707.77m, 0m },
                    { 45, 45, 74.54m, 0m },
                    { 46, 46, 120.33m, 0m },
                    { 47, 47, 512.18m, 0m },
                    { 48, 48, 500.5m, 0m },
                    { 49, 49, 118.78m, 0m },
                    { 50, 50, 244.34m, 0m },
                    { 51, 51, 126.09m, 0m },
                    { 52, 52, 576.73m, 0m },
                    { 53, 53, 750.3m, 0m },
                    { 54, 54, 357.7m, 0m },
                    { 55, 55, 149.76m, 0m },
                    { 56, 56, 773.73m, 0m },
                    { 57, 57, 895.63m, 0m },
                    { 58, 58, 589.65m, 0m },
                    { 59, 59, 299.51m, 0m },
                    { 60, 60, 554.08m, 0m },
                    { 61, 61, 613.06m, 0m },
                    { 62, 62, 348.11m, 0m },
                    { 63, 63, 937.73m, 0m },
                    { 64, 64, 727.92m, 0m },
                    { 65, 65, 636.79m, 0m },
                    { 66, 66, 300.65m, 0m },
                    { 67, 67, 969.63m, 0m },
                    { 68, 68, 663.87m, 0m },
                    { 69, 69, 927.06m, 0m },
                    { 70, 70, 423.46m, 0m },
                    { 71, 71, 12.94m, 0m },
                    { 72, 72, 534.2m, 0m },
                    { 73, 73, 435.61m, 0m },
                    { 74, 74, 544.97m, 0m },
                    { 75, 75, 641.76m, 0m },
                    { 76, 76, 880.44m, 0m },
                    { 77, 77, 180.79m, 0m },
                    { 78, 78, 523.2m, 0m },
                    { 79, 79, 972.13m, 0m },
                    { 80, 80, 246.88m, 0m },
                    { 81, 81, 832.44m, 0m },
                    { 82, 82, 762.43m, 0m },
                    { 83, 83, 138.33m, 0m },
                    { 84, 84, 952.23m, 0m },
                    { 85, 85, 151.67m, 0m },
                    { 86, 86, 11.51m, 0m },
                    { 87, 87, 917.21m, 0m },
                    { 88, 88, 861.79m, 0m },
                    { 89, 89, 610.82m, 0m },
                    { 90, 90, 654.41m, 0m },
                    { 91, 91, 256.98m, 0m },
                    { 92, 92, 504.37m, 0m },
                    { 93, 93, 57.22m, 0m },
                    { 94, 94, 558.85m, 0m },
                    { 95, 95, 788.67m, 0m },
                    { 96, 96, 980.9m, 0m },
                    { 97, 97, 233.49m, 0m },
                    { 98, 98, 446.37m, 0m },
                    { 99, 99, 274.37m, 0m },
                    { 100, 100, 936.19m, 0m }
                });

            migrationBuilder.InsertData(
                table: "Genre",
                columns: new[] { "Id", "NameGenre" },
                values: new object[,]
                {
                    { 1, "Comedy" },
                    { 2, "Horror" },
                    { 3, "Action|Adventure" },
                    { 4, "Drama" },
                    { 5, "Drama" },
                    { 6, "Documentary" },
                    { 7, "Horror|Thriller" },
                    { 8, "Documentary|Horror" },
                    { 9, "Comedy|Romance" },
                    { 10, "Horror" },
                    { 11, "Drama|Romance|Thriller" },
                    { 12, "Crime|Horror|Mystery|Thriller" },
                    { 13, "Crime|Drama|Thriller" },
                    { 14, "Fantasy|Sci-Fi" },
                    { 15, "Crime|Mystery" },
                    { 16, "Film-Noir|Thriller" },
                    { 17, "Action|Animation|Sci-Fi" },
                    { 18, "Comedy|Romance" },
                    { 19, "Crime" },
                    { 20, "Drama|Sci-Fi" },
                    { 21, "Adventure|Documentary" },
                    { 22, "Documentary" },
                    { 23, "Drama" },
                    { 24, "Drama" },
                    { 25, "Drama|Romance" },
                    { 26, "Drama|Thriller" },
                    { 27, "Drama" },
                    { 28, "Children|Fantasy" },
                    { 29, "Comedy|Drama|Romance" },
                    { 30, "Documentary" },
                    { 31, "Action" },
                    { 32, "Comedy|Romance" },
                    { 33, "Drama|Romance" },
                    { 34, "Romance|Western" },
                    { 35, "Documentary" },
                    { 36, "Action|Adventure|Comedy" },
                    { 37, "Fantasy|Musical" },
                    { 38, "Documentary" },
                    { 39, "Horror|Sci-Fi" },
                    { 40, "Drama|Sci-Fi|Thriller" },
                    { 41, "Comedy|Drama|Romance" },
                    { 42, "Drama" },
                    { 43, "Comedy|Drama|Romance" },
                    { 44, "Drama" },
                    { 45, "Drama|Romance" },
                    { 46, "Crime" },
                    { 47, "Documentary" },
                    { 48, "Action|Comedy|Drama" },
                    { 49, "Animation|Children|Comedy" },
                    { 50, "Comedy|Drama|Thriller" },
                    { 51, "Crime|Drama|Mystery|Thriller" },
                    { 52, "Thriller" },
                    { 53, "Drama|Romance" },
                    { 54, "Action|Adventure|Romance" },
                    { 55, "Western" },
                    { 56, "Comedy" },
                    { 57, "Drama" },
                    { 58, "Comedy" },
                    { 59, "Action|Sci-Fi|Thriller" },
                    { 60, "Crime|Drama|Thriller" },
                    { 61, "Children|Comedy|Fantasy" },
                    { 62, "Drama" },
                    { 63, "Comedy" },
                    { 64, "Drama" },
                    { 65, "Drama|Musical|Romance|IMAX" },
                    { 66, "Comedy" },
                    { 67, "Musical|Romance" },
                    { 68, "Documentary" },
                    { 69, "Crime|Drama|Mystery|Romance|Thriller" },
                    { 70, "Drama|War" },
                    { 71, "Horror" },
                    { 72, "Horror" },
                    { 73, "Drama|Sci-Fi|Thriller" },
                    { 74, "Action|Adventure|IMAX" },
                    { 75, "Comedy|Drama" },
                    { 76, "Drama" },
                    { 77, "Western" },
                    { 78, "Drama|War" },
                    { 79, "Comedy|Romance" },
                    { 80, "Adventure|Fantasy|Musical" },
                    { 81, "Comedy" },
                    { 82, "Drama|Mystery" },
                    { 83, "Animation|Comedy|Musical" },
                    { 84, "Drama|Romance" },
                    { 85, "Drama" },
                    { 86, "Children|Crime|Drama" },
                    { 87, "Comedy|Horror|Thriller" },
                    { 88, "Comedy|Drama" },
                    { 89, "Action|Drama|Fantasy|Sci-Fi" },
                    { 90, "Drama|War" },
                    { 91, "Drama" },
                    { 92, "Action|Adventure" },
                    { 93, "Comedy|Mystery" },
                    { 94, "Adventure|Drama" },
                    { 95, "Fantasy|Sci-Fi" },
                    { 96, "Drama" },
                    { 97, "Horror" },
                    { 98, "Action|Fantasy|Horror|IMAX" },
                    { 99, "Crime|Drama" },
                    { 100, "Action|Crime" }
                });

            migrationBuilder.InsertData(
                table: "Publishing",
                columns: new[] { "Id", "NamePublishing" },
                values: new object[,]
                {
                    { 1, "Oyoyo" },
                    { 2, "Vinder" },
                    { 3, "Youfeed" },
                    { 4, "Topicshots" },
                    { 5, "Mynte" },
                    { 6, "Fiveclub" },
                    { 7, "Yodo" },
                    { 8, "Gabvine" },
                    { 9, "Realfire" },
                    { 10, "Browsebug" },
                    { 11, "Zava" },
                    { 12, "Thoughtstorm" },
                    { 13, "Aimbu" },
                    { 14, "Rhybox" },
                    { 15, "Feedbug" },
                    { 16, "Oodoo" },
                    { 17, "Wordtune" },
                    { 18, "Rhybox" },
                    { 19, "Latz" },
                    { 20, "Cogidoo" },
                    { 21, "Zooveo" },
                    { 22, "Livetube" },
                    { 23, "Flipopia" },
                    { 24, "Eare" },
                    { 25, "Babbleblab" },
                    { 26, "Livepath" },
                    { 27, "Mybuzz" },
                    { 28, "Cogidoo" },
                    { 29, "Voonix" },
                    { 30, "Browsedrive" },
                    { 31, "Babblestorm" },
                    { 32, "Omba" },
                    { 33, "Voonyx" },
                    { 34, "Voonder" },
                    { 35, "Babbleset" },
                    { 36, "Kwimbee" },
                    { 37, "Kaymbo" },
                    { 38, "Eidel" },
                    { 39, "LiveZ" },
                    { 40, "Agimba" },
                    { 41, "Kwideo" },
                    { 42, "Thoughtstorm" },
                    { 43, "Eazzy" },
                    { 44, "Vimbo" },
                    { 45, "Kamba" },
                    { 46, "Devbug" },
                    { 47, "Centizu" },
                    { 48, "Buzzbean" },
                    { 49, "Voolia" },
                    { 50, "Voolia" },
                    { 51, "Youbridge" },
                    { 52, "Skajo" },
                    { 53, "Oyoloo" },
                    { 54, "Twimbo" },
                    { 55, "Wordpedia" },
                    { 56, "Skippad" },
                    { 57, "Feedspan" },
                    { 58, "Ozu" },
                    { 59, "Trudeo" },
                    { 60, "Oyonder" },
                    { 61, "Twitterlist" },
                    { 62, "Babbleset" },
                    { 63, "Youtags" },
                    { 64, "Jayo" },
                    { 65, "Quatz" },
                    { 66, "Mynte" },
                    { 67, "Bluejam" },
                    { 68, "BlogXS" },
                    { 69, "Bubblemix" },
                    { 70, "Rhyloo" },
                    { 71, "Buzzbean" },
                    { 72, "Brainbox" },
                    { 73, "Zoombeat" },
                    { 74, "Voolia" },
                    { 75, "Rhyloo" },
                    { 76, "Mydo" },
                    { 77, "Eabox" },
                    { 78, "Vipe" },
                    { 79, "Jayo" },
                    { 80, "Gigashots" },
                    { 81, "Tagpad" },
                    { 82, "Photobug" },
                    { 83, "Skinder" },
                    { 84, "Pixoboo" },
                    { 85, "Yata" },
                    { 86, "Oba" },
                    { 87, "Eadel" },
                    { 88, "Jaxworks" },
                    { 89, "Gigazoom" },
                    { 90, "Fivebridge" },
                    { 91, "Kaymbo" },
                    { 92, "Mudo" },
                    { 93, "Skiba" },
                    { 94, "Edgeclub" },
                    { 95, "Gigaclub" },
                    { 96, "Blogtag" },
                    { 97, "Dabshots" },
                    { 98, "Skyndu" },
                    { 99, "Jabbersphere" },
                    { 100, "Realblab" }
                });

            migrationBuilder.InsertData(
                table: "SellingBook",
                columns: new[] { "Id", "PriceBook" },
                values: new object[,]
                {
                    { 1, 224504.46m },
                    { 2, 961912.63m },
                    { 3, 994018.47m },
                    { 4, 178982.23m },
                    { 5, 478920.07m },
                    { 6, 990103.65m },
                    { 7, 595352.47m },
                    { 8, 794128.69m },
                    { 9, 277600.59m },
                    { 10, 639352.36m },
                    { 11, 784741.79m },
                    { 12, 223835.08m },
                    { 13, 661683.03m },
                    { 14, 599191.78m },
                    { 15, 300756.88m },
                    { 16, 913970.3m },
                    { 17, 139801.01m },
                    { 18, 366325.68m },
                    { 19, 867308.57m },
                    { 20, 649297.9m },
                    { 21, 342794.52m },
                    { 22, 169856.14m },
                    { 23, 719000.83m },
                    { 24, 772237.38m },
                    { 25, 199358.41m },
                    { 26, 35057.21m },
                    { 27, 664609.17m },
                    { 28, 216876.49m },
                    { 29, 931840.62m },
                    { 30, 990714.46m },
                    { 31, 300421.08m },
                    { 32, 799614.31m },
                    { 33, 242986.47m },
                    { 34, 430164.56m },
                    { 35, 884658.79m },
                    { 36, 131135.52m },
                    { 37, 298530.12m },
                    { 38, 333473.79m },
                    { 39, 891431.2m },
                    { 40, 718333.46m },
                    { 41, 193894.21m },
                    { 42, 551158.36m },
                    { 43, 832450.05m },
                    { 44, 978826.22m },
                    { 45, 731855.9m },
                    { 46, 838792.22m },
                    { 47, 778354.24m },
                    { 48, 869209.72m },
                    { 49, 592927.63m },
                    { 50, 957222.85m },
                    { 51, 926857.19m },
                    { 52, 343070.08m },
                    { 53, 231225.79m },
                    { 54, 786099.58m },
                    { 55, 722181.23m },
                    { 56, 705270.03m },
                    { 57, 485547.87m },
                    { 58, 784096.84m },
                    { 59, 331134.2m },
                    { 60, 985066.58m },
                    { 61, 522452.27m },
                    { 62, 240377.9m },
                    { 63, 180577.55m },
                    { 64, 130052.22m },
                    { 65, 176471.18m },
                    { 66, 786504.93m },
                    { 67, 365078.9m },
                    { 68, 514067.72m },
                    { 69, 250062.91m },
                    { 70, 649385.65m },
                    { 71, 704992.8m },
                    { 72, 506265.12m },
                    { 73, 697940.11m },
                    { 74, 551757.18m },
                    { 75, 443134.42m },
                    { 76, 416577.25m },
                    { 77, 544024.81m },
                    { 78, 223143.46m },
                    { 79, 218222.3m },
                    { 80, 756383.39m },
                    { 81, 494481.33m },
                    { 82, 386004.69m },
                    { 83, 232086.9m },
                    { 84, 664304.63m },
                    { 85, 821711.18m },
                    { 86, 937499.42m },
                    { 87, 846529.9m },
                    { 88, 779803.02m },
                    { 89, 128042.63m },
                    { 90, 127864.87m },
                    { 91, 312742.1m },
                    { 92, 811774.68m },
                    { 93, 537182.83m },
                    { 94, 623290.85m },
                    { 95, 791405.3m },
                    { 96, 593195.05m },
                    { 97, 776972.91m },
                    { 98, 421517.68m },
                    { 99, 766543.38m },
                    { 100, 322287.77m }
                });

            migrationBuilder.InsertData(
                table: "Book",
                columns: new[] { "Id", "AuthorId", "GenresId", "IsItSequel", "NumberOfPages", "PublishingsId", "SellingBooksId", "Title", "YearOfPublication" },
                values: new object[,]
                {
                    { 1, 1, 1, false, 644, 1, 1, "Mrs", new DateTime(1975, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 2, 2, 2, true, 604, 2, 2, "Mrs", new DateTime(2021, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 3, 3, 3, true, 996, 3, 3, "Ms", new DateTime(1940, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 4, 4, 4, false, 246, 4, 4, "Mrs", new DateTime(2030, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 5, 5, 5, false, 145, 5, 5, "Mr", new DateTime(1920, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 6, 6, 6, false, 929, 6, 6, "Mrs", new DateTime(1979, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 7, 7, 7, false, 335, 7, 7, "Rev", new DateTime(1986, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 8, 8, 8, false, 29, 8, 8, "Mr", new DateTime(1967, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 9, 9, 9, true, 48, 9, 9, "Rev", new DateTime(1996, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 10, 10, 10, false, 360, 10, 10, "Dr", new DateTime(1932, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 11, 11, 11, true, 175, 11, 11, "Mrs", new DateTime(2017, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 12, 12, 12, false, 56, 12, 12, "Mrs", new DateTime(1914, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 13, 13, 13, true, 549, 13, 13, "Honorable", new DateTime(1933, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 14, 14, 14, true, 883, 14, 14, "Ms", new DateTime(1916, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 15, 15, 15, true, 380, 15, 15, "Honorable", new DateTime(1937, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 16, 16, 16, false, 561, 16, 16, "Dr", new DateTime(1932, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 17, 17, 17, true, 916, 17, 17, "Mr", new DateTime(1914, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 18, 18, 18, true, 940, 18, 18, "Mrs", new DateTime(1904, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 19, 19, 19, false, 114, 19, 19, "Rev", new DateTime(1940, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 20, 20, 20, false, 154, 20, 20, "Mrs", new DateTime(1967, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 21, 21, 21, false, 810, 21, 21, "Ms", new DateTime(1968, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 22, 22, 22, false, 524, 22, 22, "Mr", new DateTime(1960, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 23, 23, 23, true, 259, 23, 23, "Honorable", new DateTime(1993, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 24, 24, 24, true, 80, 24, 24, "Honorable", new DateTime(1990, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 25, 25, 25, true, 792, 25, 25, "Dr", new DateTime(2004, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 26, 26, 26, true, 903, 26, 26, "Mrs", new DateTime(1906, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 27, 27, 27, true, 43, 27, 27, "Mrs", new DateTime(1962, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 28, 28, 28, true, 998, 28, 28, "Ms", new DateTime(1917, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 29, 29, 29, true, 27, 29, 29, "Mrs", new DateTime(1974, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 30, 30, 30, true, 723, 30, 30, "Rev", new DateTime(1958, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 31, 31, 31, true, 246, 31, 31, "Honorable", new DateTime(2022, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 32, 32, 32, true, 201, 32, 32, "Mrs", new DateTime(2006, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 33, 33, 33, false, 971, 33, 33, "Mr", new DateTime(2010, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 34, 34, 34, true, 698, 34, 34, "Dr", new DateTime(1913, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 35, 35, 35, false, 553, 35, 35, "Ms", new DateTime(1909, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 36, 36, 36, true, 712, 36, 36, "Mrs", new DateTime(1974, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 37, 37, 37, true, 150, 37, 37, "Ms", new DateTime(1991, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 38, 38, 38, true, 853, 38, 38, "Honorable", new DateTime(1963, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 39, 39, 39, true, 689, 39, 39, "Ms", new DateTime(1956, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 40, 40, 40, false, 971, 40, 40, "Ms", new DateTime(1927, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 41, 41, 41, true, 182, 41, 41, "Honorable", new DateTime(1943, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 42, 42, 42, true, 494, 42, 42, "Rev", new DateTime(1921, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 43, 43, 43, false, 871, 43, 43, "Dr", new DateTime(1928, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 44, 44, 44, true, 272, 44, 44, "Honorable", new DateTime(1917, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 45, 45, 45, true, 856, 45, 45, "Mrs", new DateTime(1901, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 46, 46, 46, false, 470, 46, 46, "Mrs", new DateTime(1910, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 47, 47, 47, false, 175, 47, 47, "Rev", new DateTime(2011, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 48, 48, 48, false, 155, 48, 48, "Mrs", new DateTime(2018, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 49, 49, 49, true, 69, 49, 49, "Honorable", new DateTime(1950, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 50, 50, 50, true, 870, 50, 50, "Mrs", new DateTime(1927, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 51, 51, 51, true, 127, 51, 51, "Rev", new DateTime(2003, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 52, 52, 52, true, 510, 52, 52, "Dr", new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 53, 53, 53, true, 999, 53, 53, "Ms", new DateTime(1968, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 54, 54, 54, true, 994, 54, 54, "Mr", new DateTime(1987, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 55, 55, 55, true, 770, 55, 55, "Mr", new DateTime(1925, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 56, 56, 56, true, 952, 56, 56, "Mrs", new DateTime(1949, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 57, 57, 57, true, 614, 57, 57, "Ms", new DateTime(2018, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 58, 58, 58, true, 240, 58, 58, "Rev", new DateTime(1922, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 59, 59, 59, false, 160, 59, 59, "Rev", new DateTime(1986, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 60, 60, 60, false, 190, 60, 60, "Mr", new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 61, 61, 61, true, 403, 61, 61, "Honorable", new DateTime(2027, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 62, 62, 62, false, 310, 62, 62, "Ms", new DateTime(1998, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 63, 63, 63, true, 186, 63, 63, "Rev", new DateTime(1915, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 64, 64, 64, false, 722, 64, 64, "Mr", new DateTime(1920, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 65, 65, 65, true, 627, 65, 65, "Ms", new DateTime(2022, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 66, 66, 66, false, 118, 66, 66, "Rev", new DateTime(1947, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 67, 67, 67, false, 987, 67, 67, "Ms", new DateTime(1938, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 68, 68, 68, true, 902, 68, 68, "Dr", new DateTime(1972, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 69, 69, 69, true, 566, 69, 69, "Dr", new DateTime(1994, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 70, 70, 70, false, 681, 70, 70, "Ms", new DateTime(1963, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 71, 71, 71, false, 810, 71, 71, "Mr", new DateTime(1931, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 72, 72, 72, false, 253, 72, 72, "Ms", new DateTime(1931, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 73, 73, 73, true, 219, 73, 73, "Honorable", new DateTime(1986, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 74, 74, 74, false, 185, 74, 74, "Honorable", new DateTime(2016, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 75, 75, 75, true, 102, 75, 75, "Mr", new DateTime(1922, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 76, 76, 76, false, 189, 76, 76, "Rev", new DateTime(1996, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 77, 77, 77, false, 494, 77, 77, "Ms", new DateTime(1940, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 78, 78, 78, true, 983, 78, 78, "Mr", new DateTime(1936, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 79, 79, 79, false, 37, 79, 79, "Rev", new DateTime(1911, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 80, 80, 80, true, 366, 80, 80, "Mr", new DateTime(1903, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 81, 81, 81, true, 400, 81, 81, "Dr", new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 82, 82, 82, true, 294, 82, 82, "Rev", new DateTime(1932, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 83, 83, 83, true, 337, 83, 83, "Honorable", new DateTime(2006, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 84, 84, 84, false, 654, 84, 84, "Ms", new DateTime(2028, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 85, 85, 85, false, 198, 85, 85, "Honorable", new DateTime(2026, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 86, 86, 86, true, 999, 86, 86, "Rev", new DateTime(1949, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 87, 87, 87, true, 847, 87, 87, "Dr", new DateTime(1961, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 88, 88, 88, false, 180, 88, 88, "Ms", new DateTime(1940, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 89, 89, 89, true, 116, 89, 89, "Mrs", new DateTime(1999, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 90, 90, 90, false, 573, 90, 90, "Mr", new DateTime(1935, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 91, 91, 91, true, 469, 91, 91, "Mrs", new DateTime(2009, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 92, 92, 92, true, 765, 92, 92, "Mrs", new DateTime(1903, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 93, 93, 93, true, 924, 93, 93, "Dr", new DateTime(1949, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 94, 94, 94, true, 820, 94, 94, "Ms", new DateTime(1952, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 95, 95, 95, true, 226, 95, 95, "Dr", new DateTime(1912, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 96, 96, 96, true, 746, 96, 96, "Ms", new DateTime(1928, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 97, 97, 97, true, 607, 97, 97, "Ms", new DateTime(1965, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 98, 98, 98, false, 560, 98, 98, "Ms", new DateTime(2005, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 99, 99, 99, true, 408, 99, 99, "Dr", new DateTime(1938, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                    { 100, 100, 100, false, 527, 100, 100, "Rev", new DateTime(1971, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                });

            migrationBuilder.CreateIndex(
                name: "Search Authors Name",
                table: "Author",
                column: "FullName");

            migrationBuilder.CreateIndex(
                name: "IX_Book_AuthorId",
                table: "Book",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_Book_GenresId",
                table: "Book",
                column: "GenresId");

            migrationBuilder.CreateIndex(
                name: "IX_Book_PublishingsId",
                table: "Book",
                column: "PublishingsId");

            migrationBuilder.CreateIndex(
                name: "IX_Book_SellingBooksId",
                table: "Book",
                column: "SellingBooksId");

            migrationBuilder.CreateIndex(
                name: "Search Book Name",
                table: "Book",
                column: "Title");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Book");

            migrationBuilder.DropTable(
                name: "Author");

            migrationBuilder.DropTable(
                name: "CostBook");

            migrationBuilder.DropTable(
                name: "Genre");

            migrationBuilder.DropTable(
                name: "Publishing");

            migrationBuilder.DropTable(
                name: "SellingBook");
        }
    }
}
